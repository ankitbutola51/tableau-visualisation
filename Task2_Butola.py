# -*- coding: utf-8 -*-
"""Data_Visualization_CA2_Task21

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GJeWjk_P5WLMYswx0Zr6MgNXbQU8o8_C
"""

#Installing Clustering and UMAP
!pip install hdbscan
!pip install umap-learn
!pip install umap-learn[plot]

#Importing the required Library
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_openml
from sklearn.decomposition import PCA
import umap.umap_ as umap
import hdbscan
import sklearn.cluster as cluster
from sklearn.metrics import adjusted_rand_score, adjusted_mutual_info_score

#Reading the dataset
cover_type = pd.read_csv("sample_data/covertype.csv")

#Reading few data from the dataset
cover_type.head()

import sklearn.cluster as cluster
from sklearn.metrics import adjusted_rand_score, adjusted_mutual_info_score
kmeans_labels = cluster.KMeans(n_clusters=7).fit_predict(cover_type)

standard_embedding = umap.UMAP(random_state=42).fit_transform(cover_type)
plt.scatter(standard_embedding[:, 0], standard_embedding[:, 1], c=kmeans_labels, s=0.1, cmap='Spectral');

# Dividing dataset into label and feature sets
X = cover_type.drop(['Cover_Type'], axis = 1) # Features
Y = cover_type['Cover_Type'] # Labels
print(type(X))
print(type(Y))
print(X.shape)
print(Y.shape)

# Normalizing numerical features so that each feature has mean 0 and variance 1
from sklearn.preprocessing import StandardScaler
feature_scaler = StandardScaler()
X_scaled = feature_scaler.fit_transform(X)

# Implementing PCA to visualize dataset
from sklearn.decomposition import PCA
import plotly.graph_objs as go
import plotly.figure_factory as ff
pca = PCA(n_components = 2)
pca.fit(X_scaled)
x_pca = pca.transform(X_scaled)
print("Variance explained by each of the n_components: ",pca.explained_variance_ratio_)
print("Total variance explained by the n_components: ",sum(pca.explained_variance_ratio_))
forest_patches=list(cover_type['Cover_Type'])

df = [go.Scatter(x=x_pca[:,0], y=x_pca[:,1], mode='markers',
                    marker = dict(color=Y, colorscale='Rainbow', opacity=0.5),
                                text=[f'forest_patches: {a}' for a in forest_patches],
                                hoverinfo='text')]

layout = go.Layout(title = 'PCA Dimensionality Reduction', width = 700, height = 700,
                    xaxis = dict(title='First Principal Component'),
                    yaxis = dict(title='Second Principal Component'))
fig = go.Figure(data=df, layout=layout)
fig.show()

# Implementing UMAP to visualize dataset
u = umap.UMAP(n_components = 2, n_neighbors=7, min_dist=0.1)
x_umap = u.fit_transform(X_scaled)

data = [go.Scatter(x=x_umap[:,0], y=x_umap[:,1], mode='markers',
                    marker = dict(color=Y, colorscale='Rainbow', opacity=0.5),
                                text=[f'forest_patches: {a}' for a in forest_patches],
                                hoverinfo='text')]

layout = go.Layout(title = 'UMAP Dimensionality Reduction', width = 700, height = 700,
                    xaxis = dict(title='First Dimension'),
                    yaxis = dict(title='Second Dimension'))
fig = go.Figure(data=data, layout=layout)
fig.show()

"""**Q1. Can you identify any clusters of forest patches? If yes, then describe these cluster**


**Answer:** From the above ouput, we can state that there is no forest patch clusters and mostly the forest patches seems to be overlapping each other.

**Q2. For each of the seven trees mentioned in the data, can you identify the characteristics of
forest patches where a particular tree type might be present predominantly?**


**Answer:** Yes, after observing the above scatter plot, the predominant presence of forest can be clearly viewed and below are the forest types sharing same characteristics.

a. 1, 2, 5, and 7 shares the same characteristics forming wilderness area 1. 

b. Forest patches 1, 2, 7 forming wilderness area 2.

c. Forest patches 1, 2, 3, 5, 7 forming wilderness area 3.

d. Forest patch 2, 3, 4, 6 forming forming wilderness area 3.

**Q3.	Are there any tree types which can grow in more diverse environments?**


**Answer:** From the above output, we can state that Wilderness_Area1, Wilderness_Area1 and Hillshade_Noon can growm in more diverse environments as compared to others.
"""

